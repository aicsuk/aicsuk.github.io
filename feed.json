{
    "version": "https://jsonfeed.org/version/1",
    "title": "Aicsuk",
    "subtitle": "一个小小的博客",
    "icon": "https://www.aicsuk.net/assets/favicon.ico",
    "description": "此去前路皆坦途，归来亦无悔",
    "home_page_url": "https://www.aicsuk.net",
    "items": [
        {
            "id": "https://www.aicsuk.net/liferecord/Kingisepp-trekking/",
            "url": "https://www.aicsuk.net/liferecord/Kingisepp-trekking/",
            "title": "游览金吉谢普",
            "date_published": "2025-05-24T06:29:23.539Z",
            "content_html": "<blockquote>\n<p><strong>金吉谢普</strong> （俄语：Ки́нгисепп，罗马化：Kingisepp）是俄罗斯列宁格勒州的城市，位于卢加河畔。2002年人口50,295人。1384年首见于文献，1583年归瑞典，1703年归沙俄。1922年以爱沙尼亚共产党人 <strong>维克托·金吉谢普</strong> 命名。</p>\n</blockquote>\n<p><link rel=\"stylesheet\" href=\"//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css\"><script data-pjax src=\"//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js\"></script><script data-pjax src=\"//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js\"></script><div id=\"googleMap-28.59710434256229-59.373784663030676\" style=\"max-width:1; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;\"></div><script type=\"text/javascript\">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={\"谷歌地图\":normalMap,\"谷歌卫星图\":satelliteMap,\"谷歌卫星标注\": routeMap};var overlayLayers={};var mymap=L.map(\"googleMap-28.59710434256229-59.373784663030676\",{center:[59.373784663030676,28.59710434256229],zoom:10,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['59.373784663030676','28.59710434256229']).addTo(mymap);marker.bindPopup(\"俄罗斯列宁格勒州金吉谢普区\").openPopup();</script></p>\n<div class=\"note info\">\n<p>上方为嵌入式地图，如果你发现上方为大片空白，请重新刷新一下页面。</p>\n</div>\n<p>博主最近被调到俄罗斯的第二大城市——圣彼得堡附近工作了，说是附近，其实离圣彼得堡也有个小200公里的路程，在波罗的海旁，三国交界处。附近一片全是森林，实在是没有娱乐的地方。</p>\n<p>今天周六，难得有空闲时间，决定前往距离最近的城市，六七十公里外的金吉谢普逛逛。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250524235937.jpg\" alt=\"\" title=\"金吉谢普区荣誉墙\" /></p>\n<p>整个金吉谢普，给我的第一印象就是人太少了，除了商场人多一点，街上根本就多少人，但停在路边的车子却很多，就很奇怪。</p>\n<table>\n<thead>\n<tr>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/mmexport1748106465062.jpg\" alt=\"\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/1000000931.jpg\" alt=\"\" /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/1000000935.jpg\" alt=\"\" /></td>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/mmexport1748115116667.jpg\" alt=\"\" /></td>\n</tr>\n</tbody>\n</table>\n<p>城中心估计是由于建成时间比较早，整体建筑风格类似于苏联式建筑风格，城市外围也有部分现代化楼房。</p>\n<p>城市里随处可见各种雕像、纪念碑，镌刻着这座城市发展历程中不可磨灭的记忆。</p>\n<table>\n<thead>\n<tr>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250524230249.jpg?x-oss-process=style/1\" alt=\"\" title=\"切尔诺贝利核电站事故纪念碑\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250524232024.jpg?x-oss-process=style/1\" alt=\"\" title=\"献给为祖国而战的苏联士兵\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250524232412.jpg?x-oss-process=style/1\" alt=\"\" title=\"献给在卫国战争中牺牲的游击队员\" /></th>\n</tr>\n</thead>\n</table>\n<p>沿着街道往前走，便来到凯瑟琳大教堂。凯瑟琳大教堂是金吉谢普主要的东正教教堂，建于18世纪下半叶，它以亚历山大烈士凯瑟琳的名字命名。<br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250524234010.jpg?x-oss-process=style/1\" alt=\"\" /></p>\n<p>继续往前走，就到了卢加河边。不知道是由于污染还是什么原因，整个河水都是黑色，博主还是第一次看到黑色的河🤣。</p>\n<table>\n<thead>\n<tr>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250524234617.jpg\" alt=\"\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250524234811.jpg\" alt=\"\" /></th>\n</tr>\n</thead>\n</table>\n<p>由于时间有限，博主只在城里逛了一两个小时，没能逛完这座小城，希望以后有机会再来逛一逛吧。最后看一下俄罗斯这边的油价。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/05/20250525000202.jpg?x-oss-process=style/1\" alt=\"\" /></p>\n<p>按照5月24日的汇率，92号5.21，95号5.65，98号7.96，柴油6.44，这价格是真的便宜。</p>\n",
            "tags": [
                "生活记录",
                "俄罗斯",
                "旅游"
            ]
        },
        {
            "id": "https://www.aicsuk.net/toss/qexobkjg/",
            "url": "https://www.aicsuk.net/toss/qexobkjg/",
            "title": "博客现状",
            "date_published": "2025-03-24T23:15:29.298Z",
            "content_html": "<p>  许久没有整理博客了，主要也是去年电脑重置后，电脑上的Hexo本地文件没有保存，又懒得重新配置本地环境，就一直摸鱼到现在。这个月心血来潮重新整理了一下，更换了新主题，同时也使用 <a href=\"https://www.oplog.cn/qexo/\">Qexo静态博客编辑器</a> 将本地管理的方式全部搬到云端在线管理，这样也能随时随地发布文章，比本地发布方便多了。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/03/QQ20250325-103725.png\" alt=\"Qexo主页\" /></p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/03/QQ20250325-103655.png\" alt=\"Qexo写文章\" /></p>\n<p>  现在博客源码保存在GitHub私有仓库，博客配置什么的可以在GitHub上面直接修改，也可以在Qexo上面修改。发布文章或者修改配置之后，通过 GitHub Actions 自动化部署到 <a href=\"https://pages.github.com/\">GitHub Pages</a> 和 <a href=\"https://cloud.tencent.com/\">腾讯云COS</a>，同时 <a href=\"https://pages.cloudflare.com/\">Cloudflare Pages</a> 会自动拉取GitHub仓库，构建并完成部署。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/04/bokejg31.png\" alt=\"博客结构图\" /></p>\n<p>  因为博主在国外，所以才将博客分别部署到 Cloudflare Pages 和 腾讯云COS，实现国内外访问分流，这样加载速度应该是很快的，网站测速都是全绿。<s>另外由于分流访问后，每次发布文章、修改配置什么的 Cloudflare Pages 重新部署需要等十多分钟才能生效，所以 GitHub Pages 部署的站点就专门用作预览测试网站了。</s> Cloudflare Pages构建变量的问题，重新设置构建变量后，现在部署时间不会超过1分钟。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/03/QQ20250325-113248.png\" alt=\"网站测速\" /></p>\n<p>  这样部署连服务器都省了，每年只需要域名续费的钱和腾讯云COS、CDN资源包的钱，合计不到200元，还是很划算的。</p>\n",
            "tags": [
                "折腾学习",
                "Qexo",
                "GitHub"
            ]
        },
        {
            "id": "https://www.aicsuk.net/toss/aicsukworld/",
            "url": "https://www.aicsuk.net/toss/aicsukworld/",
            "title": "注册了一个新域名",
            "date_published": "2025-03-21T11:51:12.899Z",
            "content_html": "<p>已经有一年多没打理过博客了，最近突发奇想，准备好好整一整，这次打理完博客之后，下一次又不知道是多久了。<br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/images/2025/03/d4b3953f-ba73-4762-be8f-2c824cc08ee5.png\" alt=\"\" /><br />\n趁着这次心血来潮，注册了一个新域名aicsuk.world，正好对应我的小站标题。第一年注册只需要14块5，第二年以后续费就需要227块钱了。</p>\n",
            "tags": [
                "折腾学习",
                "域名"
            ]
        },
        {
            "id": "https://www.aicsuk.net/toss/linuxgame/",
            "url": "https://www.aicsuk.net/toss/linuxgame/",
            "title": "Linux系统运行剑网三",
            "date_published": "2024-01-06T09:06:30.000Z",
            "content_html": "<p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\">\n<iframe src=\"//player.bilibili.com/player.html?isOutside=true&aid=325769183&bvid=BV1tw41137WC&cid=1395361129&p=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 90%; left: 0; top: 0;\"></iframe></div>\n</p>\n<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>最近Windows系统有些审美疲劳，然后在B站上刷到了日常使用Linux系统的视频，看着还不错，就想着自己来试试。</p>\n<p>但我就是一个臭打游戏的，换新系统的第一件事肯定是看看能不能运行自己玩的剑网三。正好，在剑三魔盒上看到了《<a href=\"https://origin.jx3box.com/tool/39093\">关于在Wine (SteamDeck) 下运行剑网3的可行性与实现方法</a>》这篇文章，整体思路就是：安装wine→安装剑三并设置跳过显卡检测→成功运行。</p>\n<p>目前，我只在Deepin20.9和Archlinux上成功运行了剑网三，所以我会把两种系统运行剑三的流程都写出来。（<s>据说Deepin就是统信Uos的社区版，所以我猜测统信Uos应该也能运行</s>）</p>\n<h3 id=\"前提条件\"><a class=\"anchor\" href=\"#前提条件\">#</a> 前提条件</h3>\n<p>一台正常安装了Deepin20.9或者Archlinux的物理机。</p>\n<p>如果安装的话，可以看看下面的安装教程：</p>\n<p>1、<a href=\"https://www.deepin.org/zh/installation/\">Deepin20.9系统安装教程</a></p>\n<p>2、<a href=\"https://arch.icekylin.online/\">Archlinux系统安装教程</a></p>\n<h3 id=\"安装wine\"><a class=\"anchor\" href=\"#安装wine\">#</a> 安装Wine</h3>\n<p>Wine 是类 UNIX 系统下运行 Windows 程序的“兼容层”，是正在持续开发中的自由软件。在 Wine 中运行的 Windows 程序，就如同运行原生 Linux 程序一样，不会有模拟器那样的严重性能问题。</p>\n<h4 id=\"1-archlinux系统安装wine以及其它相关依赖\"><a class=\"anchor\" href=\"#1-archlinux系统安装wine以及其它相关依赖\">#</a> 1、Archlinux系统安装Wine以及其它相关依赖：</h4>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">sudo pacman -S wine wine-mono wine_gecko wine-staging giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls \\</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse libgpg-error \\</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo \\</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">sqlite lib32-sqlite libxcomposite lib32-libxcomposite libxinerama lib32-libgcrypt libgcrypt lib32-libxinerama \\</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 \\</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader</span></span></code></pre>\n<p>全部复制进终端，然后回车即可</p>\n<h4 id=\"2-deepin209系统安装wine\"><a class=\"anchor\" href=\"#2-deepin209系统安装wine\">#</a> 2、Deepin20.9系统安装Wine</h4>\n<p>应用商店下载安装“Wine运行器”，然后点击左上角“程序”→“添加Wine运行器源以及安装较新版本的WineHQ”，然后在弹出的终端里按照指示操作即可。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/%E6%88%AA%E5%9B%BE_deepin-wine-runner_20240106164338.png\" alt=\"Wine运行器\" /></p>\n<h3 id=\"安装wine游戏助手\"><a class=\"anchor\" href=\"#安装wine游戏助手\">#</a> 安装Wine游戏助手</h3>\n<p>点此直接下载<a href=\"https://winegame.net/downloads/\">wine游戏助手</a>，里面有Deepin版和Archlinux版本，按需下载安装，后续游戏的运行都是通过它来实现。</p>\n<h3 id=\"安装剑网三\"><a class=\"anchor\" href=\"#安装剑网三\">#</a> 安装剑网三</h3>\n<p>Windows系统怎么下载安装，在Linux上同样怎么下载安装，不过在官网下载的剑三安装器，Archlinux系统因为安装了wine可以直接双击打开，而Deepin系统需要通过<code>Wine游戏助手</code>或者<code>Wine运行器</code>打开。</p>\n<p>或者从其他地方复制完整的剑三客户端过来也可以。</p>\n<h3 id=\"运行剑网三\"><a class=\"anchor\" href=\"#运行剑网三\">#</a> 运行剑网三</h3>\n<p>这一步，Archlinux系统和Deepin系统基本上步骤都是一样的。</p>\n<h4 id=\"1-wine游戏助手手动添加剑网三\"><a class=\"anchor\" href=\"#1-wine游戏助手手动添加剑网三\">#</a> 1、“Wine游戏助手”手动添加剑网三</h4>\n<p>打开<code>Wine游戏助手</code>，首先设置一下wine环境，点击左下角运行环境里Wine旁边的圆形齿轮。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/image-20240106175320362.png\" alt=\"点击齿轮\" /></p>\n<p>右上角开启<code>高级选项</code>，然后Wine版本设置为<code>系统自带的wine版本</code>，DXVK版本选择<code>v2.3-vulkan1.3</code>，VKD3D版本选择<code>v2.10-vulkan1.3</code>，然后点击右上角<code>保存</code>。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/%E6%88%AA%E5%9B%BE_lutris_20240106164750.png\" alt=\"wine配置\" /></p>\n<p>回到<code>Wine游戏助手</code>页面，点击左上角<code>+</code>号，选择<code>手动配置游戏运行环境</code>。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/%E6%88%AA%E5%9B%BE_lutris_20240106164812.png\" alt=\"手动运行\" /></p>\n<p>游戏信息，名称自己设置，我这里填写为“剑网三”，运行环境选择<code>Wine(运行Windows游戏)</code>。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/%E6%88%AA%E5%9B%BE_lutris_20240106164837.png\" alt=\"游戏信息\" /></p>\n<p>游戏选项，主程序设置为<code>剑网三启动器位置</code>，也就是”SeasunGame.exe“程序位置，然后点击右上角保存。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/%E6%88%AA%E5%9B%BE_lutris_20240106164902.png\" alt=\"启动目录\" /></p>\n<h4 id=\"2-修改剑网三设置\"><a class=\"anchor\" href=\"#2-修改剑网三设置\">#</a> 2、修改剑网三设置</h4>\n<p>打开客户端工作路径（~\\SeasunGame\\Game\\JX3\\bin\\zhcn_hd）下的<code>config.ini</code>，给<code>[Debug]</code>这段里面加一行：<code>SkipVideoCardScoreUpdate=1</code><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/%E6%88%AA%E5%9B%BE_deepin-editor_20240106170058.png\" alt=\"设置剑网三\" /></p>\n<h4 id=\"3-启动剑网三\"><a class=\"anchor\" href=\"#3-启动剑网三\">#</a> 3、启动剑网三</h4>\n<p>这个时候回到<code>Wine游戏助手</code>页面，选择刚刚添加的剑网三，点击启动，会弹窗提示更新Wine配置和安装Wine-Mono组件，等待自动安装完成即可。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240106165029.png\" alt=\"wine配置\" /></p>\n<h4 id=\"4-快乐游戏\"><a class=\"anchor\" href=\"#4-快乐游戏\">#</a> 4、快乐游戏</h4>\n<p>一切就绪后会像Windows一样正常运行剑三，以后每次玩游戏都需要通过<code>Wine游戏助手</code>启动运行。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/image-20240106181332488.png\" alt=\"剑三启动器\" /><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/234462_3233557.png\" alt=\"Archlinux\" /><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/image-20240106181502401.png\" alt=\"Deepin20.9\" /></p>\n<h3 id=\"后记\"><a class=\"anchor\" href=\"#后记\">#</a> 后记</h3>\n<h4 id=\"1-游戏加速器\"><a class=\"anchor\" href=\"#1-游戏加速器\">#</a> 1、游戏加速器</h4>\n<p>由于我在国外，玩剑三需要游戏加速器，而Linux上的根本就没有能<strong>在国外加速国内网游</strong>的游戏加速器，所以也只能通过一些特别的办法来实现加速效果。</p>\n<p><a href=\"https://hu60.cn/q.php/bbs.topic.95932.html\">在Linux中通过虚拟机使用Windows版网游加速器</a></p>\n<h4 id=\"2-deepin209系统卡在登录过图界面\"><a class=\"anchor\" href=\"#2-deepin209系统卡在登录过图界面\">#</a> 2、Deepin20.9系统卡在登录过图界面</h4>\n<p>因为我是直接从Windows系统上将剑三客户端复制过来的，在Deepin20.9系统上运行会出现卡在过图界面的情况，这种时候只需要将“~\\SeasunGame\\Game\\JX3\\bin\\zhcn_hd目录”下的<code>interface</code>和<code>userdata</code>文件夹删掉就能正常进入游戏了。</p>\n<p>Archlinux系统就不会这样。</p>\n",
            "tags": [
                "折腾学习",
                "剑网三",
                "Linux",
                "Deepin",
                "Archlinux"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/2023zj/",
            "url": "https://www.aicsuk.net/liferecord/2023zj/",
            "title": "凄凉又做他乡人——2023年终总结",
            "date_published": "2024-01-06T05:44:05.000Z",
            "content_html": "<p>今天已经是2024年的第6天，也是来到俄罗斯的第186天。不出意外的话，今年又是一个人独自在外过年，从2017年开始，到现在也是独自在外过的第7个年了。</p>\n<p>我们单位在鄂木斯克，时差和国内不算太大，和新疆那边差不多，也是东6区。可能因为是小城市的原因，在大街上很少看到有亚洲面孔的人。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2024/24200E810F31416B29F2EDB5A6E1DD66.png\" alt=\"夕阳西下\" /></p>\n<p>作为四川人，很少看到下雪，更别提这么大的雪了，同时也是第一次感受到零下三四十度的天气。网上也有人在争论南北方哪边更冷，不过我觉得但从感受上来看，还是南方冷一点，毕竟就算是零下三四十度，但你不可能一直在室外吧，室内有暖气能穿短袖、有时还能把我热醒；而南方甚至室内比室外还冷，睡觉躺床上半天被窝都暖和不起来。</p>\n<p>上周和家里联系，我们小区车位价格都降到5万左右了，想之前我买房的时候一个车位都还要十五六万，这才几年啊就降1/3了，还好当初没买。或许等我赚两年钱，回去看看能不能买个车位吧。😅</p>\n<p>2024，人又老了一岁，包里的钱却一点都没见涨，愁啊。</p>\n",
            "tags": [
                "生活记录",
                "总结"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/81jianjun/",
            "url": "https://www.aicsuk.net/liferecord/81jianjun/",
            "title": "又是一年八一节",
            "date_published": "2023-08-01T01:16:21.000Z",
            "content_html": "<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/IMG_0159.PNG\" alt=\"\" /></p>\n<p>转眼间出来都快一年了啊😔</p>\n<p>战友们八一建军节快乐啊！</p>\n",
            "tags": [
                "生活记录",
                "八一建军节"
            ]
        },
        {
            "id": "https://www.aicsuk.net/toss/hexotovirtualhost/",
            "url": "https://www.aicsuk.net/toss/hexotovirtualhost/",
            "title": "Hexo自动部署至虚拟主机",
            "date_published": "2023-07-30T06:55:30.000Z",
            "content_html": "<h4 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h4>\n<p>去年618我在西部数码一次性买了五年的云虚拟主机，当时好像才两三百块钱。云虚拟主机买来主要是用来挂备案的，想着小厂备案可能查得不严。刚开始还好，博客也部署在华为云服务器上，可能域名指向的是国内，也确实没查过备案。</p>\n<p>今年6月份华为云到期了没续费，刚好我人也在国外，本着能省则省的原则，就把博客部署到Netlify了。结果还不到一个月，西数就发邮件来说检测到域名指向了其他IP地址。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/20230730152616.png\" alt=\"西数邮件\" /></p>\n<p>最后没办法，就只能把这个云虚机用起来，域名分开解析，国内解析到这台虚机，国外解析到Netlify。</p>\n<p>但是这样问题也来了，Netlify还好说，只需要部署至GITHUB就好了；可是虚拟主机就不方便了，网上都是说安装 <em>hexo-deployer-ftpsync</em> 插件，但在部署的时候一直报错，上传不了，只能自己手动FTP上传了。</p>\n<p>后来了解到有个东西叫做 <a href=\"https://github.com/SamKirkland/FTP-Deploy-Action\">FTP-Deploy-Action</a> ，可以通过 GitHub Action 自动将博客部署到虚拟主机，简直不要太方便，甚至还可以通过 GitHub Action 同时部署到 Github Pages 和虚拟主机。</p>\n<h4 id=\"前提条件\"><a class=\"anchor\" href=\"#前提条件\">#</a> 前提条件</h4>\n<h5 id=\"一-需要使用虚拟主机部署hexo博客\"><a class=\"anchor\" href=\"#一-需要使用虚拟主机部署hexo博客\">#</a> 一、需要使用虚拟主机部署Hexo博客</h5>\n<h5 id=\"二-hexo博客能正常部署访问\"><a class=\"anchor\" href=\"#二-hexo博客能正常部署访问\">#</a> 二、Hexo博客能正常部署访问</h5>\n<p>如果还没有Hexo博客或者不会搭建Hexo博客的话，可以看看下面两篇文章：</p>\n<p>1、<a href=\"https://akilar.top/posts/6ef63e2d/\">Win10:Hexo+github搭建个人博客</a></p>\n<p>2、<a href=\"https://akilar.top/posts/e5502ef6/\">Ubuntu:Hexo+github搭建个人博客</a></p>\n<h5 id=\"三-hexo博客可以通过-github-action-部署到-github-pages\"><a class=\"anchor\" href=\"#三-hexo博客可以通过-github-action-部署到-github-pages\">#</a> 三、Hexo博客可以通过 GitHub Action 部署到 Github Pages</h5>\n<p>如果还没有配置好 GitHub Action 的话，可以看看这篇文章 <a href=\"https://akilar.top/posts/f752c86d/\">使用Github Action实现全自动部署 </a> 。</p>\n<p>另外，在将本地文件备份至 Github 的过程中，可能会出现主题文件夹是空文件夹的情况，这样通过 GitHub Action 部署后博客打开会白屏没有任何样式。解决办法可以看看这里 <a href=\"https://blog.csdn.net/liaoweilin0529/article/details/113650333\">Hexo主题themes-文件夹无法提交到GitHub的解决方法</a> 。</p>\n<h4 id=\"配置-github-action\"><a class=\"anchor\" href=\"#配置-github-action\">#</a> 配置 GitHub Action</h4>\n<p>打开 Action 配置文件<code>（本地博客仓库目录/.github/workflows/(Action配置文件).yml）</code>，在后面添加</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">- name: Deploy Files on Ftp Server</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  uses: SamKirkland/FTP-Deploy-Action@4.3.3</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  with:</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    server: (FTP服务器地址)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    username: (FTP用户名)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    password: (FTP密码)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    local-dir: ./public/</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    server-dir: (FTP服务器文件目录)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    port: (FTP服务器端口，一般是21)</span></span></code></pre>\n<p>最后直接将博客源码提交到github上就行了。</p>\n",
            "tags": [
                "折腾学习",
                "GitHub Action",
                "虚拟主机"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/jinkuang/",
            "url": "https://www.aicsuk.net/liferecord/jinkuang/",
            "title": "两三月的近况",
            "date_published": "2023-07-13T06:17:17.000Z",
            "content_html": "<h4 id=\"第一次坐飞机\"><a class=\"anchor\" href=\"#第一次坐飞机\">#</a> 第一次坐飞机</h4>\n<p>6月的第一天，自己体验了下坐飞机，从成都飞往俄罗斯鄂木斯克，飞行全程12个小时，中间在莫斯科谢列梅捷沃机场转机休息两三个小时。</p>\n<table>\n<thead>\n<tr>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/IMG_0053(20230713-141000).JPG\" alt=\"\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/IMG_0052(20230713-140956).JPG\" alt=\"\" /></th>\n</tr>\n</thead>\n</table>\n<p>成都飞莫斯科乘坐的是四川航空3U3887航班，也算是同时体验了一把传说中的“喂猪”航空，中途主食零食基本没停过。莫斯科飞鄂木斯克坐的是俄航SU1638航班，登机后的第一映像就是飞机太小了，中途送的飞机餐也没有川航的好吃。</p>\n<p>总体来说，我觉得坐飞机也不咋样，在天上十几个小时，全程手机没信号，除了看电影就是睡觉，一点娱乐活动都没有，要是没啥急事的话，坐飞机真没有坐火车舒服。😞</p>\n<h4 id=\"逛街\"><a class=\"anchor\" href=\"#逛街\">#</a> 逛街</h4>\n<p>鄂木斯克这边和国内时差2小时，这边12点国内就14点了，而且这边白天日照时间非常长，早上四五点钟太阳就出来了，一直到晚上九十点才下山，刚来的时候特别不适应，现在好多了。</p>\n<p>来鄂木斯克主要是过来工作的，中间也断断续续的出去过几次。最大的映像就是这边的俄罗斯人上午上班太晚了，上午九十点钟都不见几个商店开门。</p>\n<p>鄂木斯克市是俄罗斯鄂木斯克州的首府，就和国内省会一样，但是走在街上感觉还不如我们国内的一个小县城，城中间主干道还好，一些其他的道路上还有灰尘，人行道直接就是泥巴路。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/B909F0F288A52B4E6347947744A1AEDA.png\" alt=\"主路一角\" /></p>\n<p>而且他们这边车辆没有报废制度，所以在路上能看到豪车、新车，也能看见车龄几十年的老爷车。并且还没有5G网络，只有4G，甚至有些时候手机都只有3G信号，对我这种极度喜欢手机网上冲浪的人来说简直就是地狱，另外我刚来的时候还体验到了因天气热导致外面基站被烧坏的情况，简直无语，这边的基建太差了。</p>\n<p>上周又出去逛了一下，上午快十点了，这边商场外面都没几个人。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/IMG_0024.JPG\" alt=\"\" /></p>\n<p>闲逛途中看见另一家商场外面还挂着镰锤标记，可能俄罗斯人也还是怀恋以前的那个时代吧。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/IMG_0033.JPG\" alt=\"锤镰\" /></p>\n<p>晚上回到住所，和朋友出去一家国人开的烧烤店撸串，5串猪肉串50元人民币，感觉还行，就是少了点辣椒。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/5E81D3DE220DED49E85DCCFC18800D05.jpg\" alt=\"\" /></p>\n<h4 id=\"新手机\"><a class=\"anchor\" href=\"#新手机\">#</a> 新手机</h4>\n<p>过来之后想换个苹果手机，结果发现这边同配置的苹果14 pro比国内贵很多，紫色256G苹果14 pro卖135990卢布，合人民币10800多，而国内京东上也才8000出头，相差近两三千块钱，而且就算在网上买了之后也要十多天才能送到。</p>\n<p>所以6月底我托朋友在国内买了台国行紫色苹果14pro带过来，这样一算我省了好多钱！🤑</p>\n<table>\n<thead>\n<tr>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/20230713155926.png\" alt=\"\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/IMG_0054.PNG\" alt=\"\" /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/13D99242AAED29BA03BC53FACF448F0F.jpg\" alt=\"\" /></td>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/66F0DDD31A45AD020822A02653B848F1.jpg\" alt=\"\" /></td>\n</tr>\n</tbody>\n</table>\n<p>可惜当时忘了买手机壳和贴膜了，上周出去在这边买的手机壳和贴膜，总共花了我2600多卢布，太贵了。</p>\n",
            "tags": [
                "生活记录",
                "俄罗斯",
                "鄂木斯克"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/xinpckaixiang/",
            "url": "https://www.aicsuk.net/liferecord/xinpckaixiang/",
            "title": "新电脑开箱记录——戴尔G16 7630",
            "date_published": "2023-04-18T01:15:20.000Z",
            "content_html": "<table>\n<thead>\n<tr>\n<th>技术规格</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>处理器</td>\n<td>Intel Core i9-13900HX(2.2GHz/L3 36M)</td>\n</tr>\n<tr>\n<td>内存</td>\n<td>16GB 2x8GB DDR5 4800MHz</td>\n</tr>\n<tr>\n<td>硬盘</td>\n<td>1TB, M.2, PCIe NVMe, 固态硬盘</td>\n</tr>\n<tr>\n<td>显示屏</td>\n<td>16英寸 QHD+ (2560 x 1600) 240Hz</td>\n</tr>\n<tr>\n<td>显卡</td>\n<td>NVIDIA® GeForce RTX™ 4060, 8GB GDDR6</td>\n</tr>\n<tr>\n<td>网络适配器</td>\n<td>英特尔® Wi-Fi 6 AX201, 2x2, 802.11ax, 蓝牙® 无线网卡</td>\n</tr>\n</tbody>\n</table>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/04/18/643df7b89c43c.jpg?x-oss-process=1\" alt=\"\" /></p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/04/18/643df7d9ecbab.jpg?x-oss-process=1\" alt=\"\" /></p>\n<p>17号早晨买的，下午下班就送到了，京东别的不说，送货速度还是挺快的。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/04/18/643df857cbff0.jpg?x-oss-process=1\" alt=\"\" /></p>\n<p>箱子里就这些东西，一个主机一个电源适配器，就是这个原装的330W电源太大了，跟个电动车充电器差不多。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/04/18/643df8f679f5f.jpg?x-oss-process=1\" alt=\"\" /></p>\n<p>正面如图，外观看起来还行，摸起来手感也挺好，感觉像是金属材质。特别是它这个Cherry机械键盘，打字非常舒服，就是声音比其他普通的笔记本键盘大一些。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/04/18/643df9d8e360f.jpg?x-oss-process=1\" alt=\"\" /></p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/04/18/643df9ec97578.jpg?x-oss-process=1\" alt=\"\" /></p>\n<p>这电脑我觉得啥都好，就是没有人脸识别和指纹解锁，有点坑，毕竟11999的价格在这。而且无线网卡也还是AX201的，上个AX211多好。</p>\n",
            "tags": [
                "生活记录",
                "戴尔G16",
                "开箱"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/wmcty/",
            "url": "https://www.aicsuk.net/liferecord/wmcty/",
            "title": "外卖初体验——兼职美团骑手配送回顾",
            "date_published": "2023-01-07T13:54:11.000Z",
            "content_html": "<table>\n<thead>\n<tr>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b986f4aec5e.jpg\" alt=\"第一页\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b98751b0cc4.jpg\" alt=\"第二页\" /></th>\n<th><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b98764f262f.jpg\" alt=\"第三页\" /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b98773591f7.jpg\" alt=\"第四页\" /></td>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b9879024842.jpg\" alt=\"第五页\" /></td>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b9879fb387e.jpg\" alt=\"第六页\" /></td>\n</tr>\n<tr>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b987af148af.jpg\" alt=\"第七页\" /></td>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b987bd1503d.jpg\" alt=\"第八页\" /></td>\n<td><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2023/01/07/63b987cb6b368.jpg\" alt=\"第九页\" /></td>\n</tr>\n</tbody>\n</table>\n<p>在家闲着也是闲着，还不如出来跑个外卖挣点外快，运气好还能加个餐🤣</p>\n<p>到现在已经跑了快十天了，就下午和晚上跑一会，差不多也跑了个小一千，至少油钱是跑回来了。</p>\n",
            "tags": [
                "生活记录",
                "美团",
                "外卖"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/2022zongjie/",
            "url": "https://www.aicsuk.net/liferecord/2022zongjie/",
            "title": "愿此去前路皆坦途——2022年终总结",
            "date_published": "2022-12-31T08:00:00.000Z",
            "content_html": "<p>这算是我第二次在博客上写年终总结。</p>\n<p>又是一年最后一天，往年在单位的这段时间，都已经开始交手写的年终工作总结报告了。</p>\n<h2 id=\"工作\"><a class=\"anchor\" href=\"#工作\">#</a> 工作</h2>\n<p><strong>今年是自己人生中的一个转折点。</strong></p>\n<p>上半年，自己开始负责一些单位交给的任务，也向组织递交了入党申请书。三月份还参加了单位组织的活动并取得了全单位第二名的好成绩。</p>\n<p>原本都计划下半年选取为二级军士后慢慢向骨干方向培养，结果在下半年时犯了一个错误，导致自己脱下戎装，遗憾退伍。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/12/31/63afe9209e704.jpg\" alt=\"再见，人民空军\" /></p>\n<p>最后一个季度，自己也找了一段时间的工作。事业单位、私企、消防，自己都去尝试过应聘，甚至还去兼职送过一段时间的外卖。幸好在今年的最后一个月，自己成功面试了一家国企，年后入职。</p>\n<h2 id=\"生活\"><a class=\"anchor\" href=\"#生活\">#</a> 生活</h2>\n<p>9月1日上午，当我走出军营的那一刻，我才意识到，自己以后再也没有机会穿上这身空军蓝了。当天下午18时，受疫情，全成都开始原则居家，一直居家半个月之久。</p>\n<p>10月，买了自己人生中第一辆摩托车——豪爵UHR150，至此，我在哪，它在哪。</p>\n<p>12月，骑着自己的摩托车，从成都回到老家达州渠县，360多公里骑了8个小时左右。</p>\n<p>今年，最开心的就是自己的房子装修完成，赶在跨年前搬进了新家，从此自己在成都正式安家落户。</p>\n<h2 id=\"运动\"><a class=\"anchor\" href=\"#运动\">#</a> 运动</h2>\n<p>由于自己原本打算留队，所以上半年自己一直在努力锻炼。以前自己体能四项基础科目和三项专项科目有一大半不能及格，锻炼以后，今年一季度考核，七项科目自己及格了六项，体重也降到了70KG。</p>\n<p>然而下半年退伍后，自己开始摆烂，不再锻炼，现在也不知道自己体能还有几项能及格了。😂</p>\n<h2 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>希望2023年自己能安安稳稳的度过。</p>\n<p>愿，此去前路皆坦途，归来亦无悔。</p>\n",
            "tags": [
                "生活记录",
                "总结"
            ]
        },
        {
            "id": "https://www.aicsuk.net/reprint/hexobianxie/",
            "url": "https://www.aicsuk.net/reprint/hexobianxie/",
            "title": "Hexo博客神器——Hexo便携版",
            "date_published": "2022-11-24T05:12:44.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>博主最近买了台新电脑，原来装好Hexo环境的老电脑目前就没怎么用，又懒得重新换电脑部署，想着看看能不能实现两台电脑同步部署。结果研究了很久，发现网上的多端部署教程都选择将Hexo备份至Github仓库。因为我博客是部署在华为云服务器上的，感觉再备份至Github仓库的话会很麻烦，所有突发奇想看看能不能实现便携式Hexo。</p>\n<p>终于，我找到了这款Hexo懒人包，里面包含了Node.js便携版和Git便携版，理论上任何Windows系统的电脑都能直接使用，免去了新电脑Node.js和Git的安装和配置。</p>\n<h2 id=\"懒人包简介\"><a class=\"anchor\" href=\"#懒人包简介\">#</a> 懒人包简介</h2>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/11/24/637f011a7eb45.png\" alt=\"PortableHexo\" /></p>\n<p>其中，hexo文件夹是博客源文件所在文件夹，可直接将已有博客文件全部复制到此文件夹内，也可重新安装Hexo。home文件夹和support文件夹不用管。</p>\n<p>其余批处理文件顾名思义，如果是重新安装的Hexo博客，需要执行一下配置Github部署和配置基本信息，如果是原有博客文件复制过来的就不用执行。</p>\n<h2 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>懒人包配置好后，可将懒人包放在U盘里，直接在U盘写作部署；也可以将懒人包压缩后放到网盘里。</p>\n<p>以后不管在哪、用哪台电脑，只要U盘在，就能随时随地写东西了。🤣</p>\n<p>这篇文章就是在新电脑上用U盘写的。</p>\n<p>懒人包地址：<a href=\"https://www.bilibili.com/read/cv15172764/\">Hexo懒人包5.0版本</a> ｜ <a href=\"https://pan.baidu.com/s/17zYeBuwm_2shHi527Ugbvw\">百度网盘（提取码3n1b）</a></p>\n",
            "tags": [
                "转载分享",
                "Hexo"
            ]
        },
        {
            "id": "https://www.aicsuk.net/atlas/ldzzg/",
            "url": "https://www.aicsuk.net/atlas/ldzzg/",
            "title": "【转载】【Worlds Collide燃向】劳动者战歌",
            "date_published": "2022-11-24T04:19:37.000Z",
            "content_html": "<p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe \nsrc=\"//player.bilibili.com/player.html?aid=455836976&bvid=BV1L5411x7ac&cid=193641072&page=1\" scrolling=\"no\" border=\"0\" \nframeborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; \nheight: 100%; left: 0; top: 0;\"> </iframe></div>\n</p>\n",
            "tags": [
                "音乐图集",
                "红色"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/chengduren/",
            "url": "https://www.aicsuk.net/liferecord/chengduren/",
            "title": "以后也算是成都人了",
            "date_published": "2022-10-15T10:01:24.000Z",
            "content_html": "<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/15/634a8e142e322.jpg\" alt=\"介绍信\" /></p>\n<p>新身份证到了，从此以后也算是个成都人了。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/15/634a8d7b2af00.jpg\" alt=\"1\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/15/634a8d7d431ae.jpg\" alt=\"2\" /></p>\n<p>当兵五年，得了个成都户口，还行吧。</p>\n",
            "tags": [
                "生活记录",
                "成都",
                "落户"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/hjuhr150/",
            "url": "https://www.aicsuk.net/liferecord/hjuhr150/",
            "title": "新车100公里纪念",
            "date_published": "2022-10-11T04:25:16.000Z",
            "content_html": "<blockquote>\n<p>踏板才是最终的归宿！</p>\n</blockquote>\n<p>为了方便通勤和节假日周边游，我前天去提了辆摩托车，豪爵UHR150。这辆车也算是个网红车吧，网上对它的评价也很好。</p>\n<p>这辆车是我在10月2日订的蓝色箱版现车，不过由于当时处于国庆，车管所放假了上不了牌，一直等到10月9日才上牌。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6344fbf3148db.jpg\" alt=\"行驶证\" /></p>\n<p>由于是车行代上牌，所以等拿到车时都是晚上了。</p>\n<p>昨天，骑着这车跑了一下午，个人感觉还不错，骑行过程中最高车速80+km/s。不过我个人感觉摩托车不适合走乡村小道，路烂颠的屁股疼。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6344fde83ad3a.jpg\" alt=\"1\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6344fde9ab5c9.jpg\" alt=\"2\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6344fde9a13f3.jpg\" alt=\"3\" /></p>\n<p>另外，这辆车还配有两个USB充电口，方便骑车的时候给手机充电。一个充电口在车把下面左侧的储物格里；另一个在坐桶下面。<s>（我个人觉得坐桶下面这个充电口设计得不是很方便）</s></p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6344ffca245fa.jpg\" alt=\"第一个充电口\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6344ffca60039.jpg\" alt=\"第一个充电口\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6345001543ea3.jpg\" alt=\"第二个充电口\" /></p>\n<p>还有，我觉得这个车最大的缺点就是后轮挡泥板太短了，一路跑下来甩得后面全是泥。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/6345008448d4f.jpg\" alt=\"右边\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/63450084ae56a.jpg\" alt=\"左边\" /></p>\n<p>下午4点46分，车子跑到100公里了。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/634500ec937cb.jpg\" alt=\"里程表\" /></p>\n<p>整车油耗的话估计在2.6L百公里左右。车子油箱8L，油表6格，平均一格大约1.33L。</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/10/11/63450170cf643.jpg\" alt=\"沿途风景\" /></p>\n",
            "tags": [
                "生活记录",
                "新车",
                "豪爵",
                "豪爵UHR150"
            ]
        },
        {
            "id": "https://www.aicsuk.net/toss/hexonote-1/",
            "url": "https://www.aicsuk.net/toss/hexonote-1/",
            "title": "Hexo笔记——解决Shoka主题评论系统表情加载失败的问题",
            "date_published": "2022-09-16T08:32:54.000Z",
            "content_html": "<p>近期将博客换成Hexo之后，最开始是部署在Github Pages上面，访问时一切正常。后面觉得Github Pages访问速度时快时慢，边重新部署在国内的华为云服务器上，这时问题就出来了，评论系统里面的表情图片正常情况下加载不出来，要搭梯子才行。<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/15/63227952eaa1e.png\" alt=\"表情加载失败\" /></p>\n<p>后来参考了<a href=\"https://www.reversesacle.com/\">ReverseSacle大佬</a>关于[Shoka主题功能的一些补充介绍](<a href=\"https://www.reversesacle.com/Supplement-for-theme-of-shoka/\">Hexo-Shoka主题功能介绍补充点 | ReverseSacle-Blog = 逆转天平 = 执着过去的人,无法迈向未来</a>)一文，并请教了ReverseSacle大佬后才了解到，shoka 主题使用的是 <code>Valine-Admin</code> 魔改评论系统，基本上都使用了<code> Jsdelivr</code> 的资源，并由于国内的服务器无法访问资源才导致的表情加载失败。</p>\n<p>为防止自己以后会忘记，特此记录下解决过程。</p>\n<h3 id=\"vercel-反代-jsdelivr-的加速链接\"><a class=\"anchor\" href=\"#vercel-反代-jsdelivr-的加速链接\">#</a> Vercel 反代 Jsdelivr 的加速链接</h3>\n<p>这一步，ReverseSacle大佬的文章中是以 <code>Windows10</code> 系统为例，但我习惯使用 <code>Linux</code> 系统，所以此次我使用 <code>Centos 8.2</code> 系统为例。</p>\n<ul>\n<li>\n<p>安装 <code>Node.js</code></p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">yum install update</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">yum install nodejs</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">yum install npm</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">npm install -g n</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">n lts</span></span></code></pre>\n</li>\n<li>\n<p>安装 <code>vercel</code></p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">npm install -g vercel</span></span></code></pre>\n</li>\n<li>\n<p>安装完 <code>vercel</code> 后，输入 <code>vercel login</code> ，会让你选择登陆 <code>vercel</code> 的方式（选择的位置以 <code>等待输入光标</code> 为准， <code>Enter</code> 键确认，具体依情况选择)，之后会跳出登入页面<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/16/63244032ccfbb.png\" alt=\"如图所示\" /><br />\n这里我使用的是邮箱登陆，会出现下图中的情况，这是 <code>vercel</code> 给你登陆邮箱发送了确认邮件，需要你在邮件中点击确认链接才能登陆<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/16/632442beabef2.png\" alt=\"邮箱登陆\" /></p>\n</li>\n<li>\n<p>新建一个名为 <code>jd_gh</code> 文件夹 (名字自定义)，进入到 jd_gh 文件夹中，新建一个 <code>jd_gh.json</code> 文件 (名字自定义)</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">mkdir jd_gh</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">cd jd_gh</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">touch jd_gh.json</span></span></code></pre>\n</li>\n<li>\n<p>用 <code>文本编辑器</code> 打开 <code>jd_gh.json</code> 文件并输入下方反代代码</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">{</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">        \"version\": 2,</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">        \"routes\": [</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">                {\"src\": \"/(.*)\",\"dest\": \"https://cdn.jsdelivr.net/$1\"}</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">                ]</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">}</span></span></code></pre>\n</li>\n<li>\n<p>最后输入命令 <code>vercel -A jd_gh.json --prod</code> 来在 vercel 上部署</p>\n</li>\n<li>\n<p><ins class=\"dot\">注意 <code>what's your project's name?</code> 这个提示，此处是提示输入你部署项目所需要的名称 (按喜好来定就行了，另外这里不支持特殊字符， <code>-</code> 号除外)，其他的选项按下方图片提示来选择即可</ins><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/16/63244364d92b3.webp\" alt=\"直接使用ReverseSacle大佬的图\" /></p>\n</li>\n<li>\n<p>最后，进入 Vercel 官网，登入后可以看到刚刚创建的项目，点击项目，进入后记录下 <code>DOMAINS</code> 处的链接，也可以绑定自己的域名使用</p>\n</li>\n</ul>\n<h3 id=\"解决评论区表情图片加载失败问题\"><a class=\"anchor\" href=\"#解决评论区表情图片加载失败问题\">#</a> 解决评论区表情图片加载失败问题</h3>\n<ul>\n<li>\n<p>在 <a href=\"https://github.com/amehime/MiniValine/blob/master/dist/MiniValine.min.js\">MiniValine (Github)</a> 下载 <code>MiniValine.min.js</code> 文件，并将 <code>MiniValine.min.js</code> 文件放入到 hexo 根目录的 <code>./themes/shoka/source/js</code> 文件夹中</p>\n</li>\n<li>\n<p>打开 <code>MiniValine.min.js</code> 文件，找到 <code>VERSION=&quot;4.2.2&quot;</code> 这一项，将 <code>t.EUrl</code> 后链接中的XXX替换为刚刚记录的 <code>DOMAINS</code> 地址或自己绑定的域名</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">t.VERSION = \"4.2.2\",</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">t.GBUrl = \"https://gravatar.loli.net/avatar/\",</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">t.EUrl = [\"https://xxxx/npm/alus@latest\", </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">          \"https://xxxx/gh/MiniValine/qq@master\", </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">          \"https://xxxx/gh/MiniValine/Bilibilis@master\",</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">          \"https://xxxx/gh/MiniValine/tieba@master\", </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">          \"https://xxxx/gh/MiniValine/twemoji@master\",</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">          \"https://xxxx/gh/MiniValine/weibo@master\"]</span></span></code></pre>\n</li>\n<li>\n<p>打开 hexo 根目录 <code>./themes/shoka/_config.yml</code> 文件，滑倒最后，找到 <code>valine</code> 元素，将其参数设为 <code>https://博客域名/js/MiniValine.min.js</code></p>\n</li>\n<li>\n<p>最后修改 <code>./themes/shoka/source/js/_app/utils.js</code>文件第26~35行处</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">//将此代码if(str.indexOf('npm')>-1||str.indexOf('gh')>-1||str.indexOf('combine')>-1)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">//拆分为下面的代码</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  if(str.indexOf('npm')>-1||str.indexOf('combine')>-1)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">     return \"https://cdn.jsdelivr.net/\" + str</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  if(str.indexOf('js')>-1)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    return str  </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  if(str.indexOf('gh')>-1)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    return \"https://cdn.jsdelivr.net/\" + str</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">//代码示例</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">const assetUrl = function(asset, type) {</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  var str = CONFIG[asset][type]</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  if(str.indexOf('npm')>-1||str.indexOf('combine')>-1)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">     return \"https://cdn.jsdelivr.net/\" + str</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  if(str.indexOf('js')>-1)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    return str  </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  if(str.indexOf('gh')>-1)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    return \"https://cdn.jsdelivr.net/\" + str</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  return statics + str;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">}</span></span></code></pre>\n</li>\n</ul>\n",
            "tags": [
                "折腾学习",
                "Hexo",
                "Shoka主题",
                "Valine"
            ]
        },
        {
            "id": "https://www.aicsuk.net/toss/bkzt/",
            "url": "https://www.aicsuk.net/toss/bkzt/",
            "title": "叒换了博客程序——记录Hexo搭建、配置、部署到云服务器的全过程",
            "date_published": "2022-09-14T07:21:32.000Z",
            "content_html": "<p>最近因为疫情原因，天天在家里也无聊得很，想着没事就试着折腾一下Hexo。</p>\n<p>刚开始还不会整Hexo博客，感觉要比Typecho要麻烦的多。经过两天的学习操作，终于建好了Hexo，本着<s>建好了就不浪费</s>的原则，决定以后就用Hexo了。</p>\n<p>目前博客程序为Hexo，使用<a href=\"https://github.com/amehime/hexo-theme-shoka\">Theme.Shoka</a>主题，部署在华为云服务器上。</p>\n<p>现在记录一下这个Hexo博客从搭建、配置和部署到云服务器的整个过程，免得以后自己忘了。</p>\n<h3 id=\"hexo本地安装\"><a class=\"anchor\" href=\"#hexo本地安装\">#</a> Hexo本地安装</h3>\n<h4 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h4>\n<ul>\n<li>下载安装<a href=\"https://nodejs.org/en/download/\">Node.js</a>（Node.js 版本需不低于 10.13，Node自带npm）</li>\n<li>下载安装<a href=\"https://git-scm.com/download/win\">Git</a></li>\n</ul>\n<h4 id=\"安装hexo\"><a class=\"anchor\" href=\"#安装hexo\">#</a> 安装Hexo</h4>\n<ul>\n<li>在自己喜欢的位置新建Hexo文件夹</li>\n<li>进入新建的Hexo文件夹，右键点击打开Git Bash Here</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#在Hexo目录下安装Hexo</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">npm install -g hexo-cli</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#检测Hexo是否安装成功</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo -v</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#初始化Hexo，并新建blog文件夹</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo init blog</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#转到刚初始化的blog文件夹下，安装npm依赖项，并生成静态文件</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">cd blog</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">npm install</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo g</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#启动Hexo服务器</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo s</span></span></code></pre>\n<ul>\n<li>访问<a href=\"http://localhost:4000\">http://localhost:4000</a>，出现Hexo页面</li>\n</ul>\n<h3 id=\"安装shoka主题\"><a class=\"anchor\" href=\"#安装shoka主题\">#</a> 安装Shoka主题</h3>\n<ul>\n<li>安装主题</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"># cd your-blog</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">git clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</span></span></code></pre>\n<ul>\n<li><a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/dependents/\">安装主题依赖插件</a></li>\n<li>修改Hexo博客配置文件_config.yml</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">theme: Shoka</span></span></code></pre>\n<ul>\n<li>生成静态文件并发布</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo g</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo s</span></span></code></pre>\n<ul>\n<li>访问<a href=\"http://localhost:4000\">http://localhost:4000</a> 进行预览，没问题的情况下就可以将博客部署到服务器上了。</li>\n</ul>\n<h3 id=\"部署到云服务器\"><a class=\"anchor\" href=\"#部署到云服务器\">#</a> 部署到云服务器</h3>\n<ul>\n<li>在自己的电脑上生成 Git 密钥</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">ssh-keygen -C \"your@mail.com\"</span></span></code></pre>\n<p>一路回车，这时你应该可以在 ~/.ssh/ 目录下看到两个刚刚生成好的密钥文件：<br />\n1. 公钥：id_rsa.pub<br />\n2. 私钥：id_rsa</p>\n<p>我们一会需要把公钥的内容拷贝到服务器上</p>\n<ul>\n<li>\n<p>服务器环境配置<br />\n一般刚重装完系统的云服务器非常纯净，什么也没有，所以我们要一点点安装我们所需的内容<br />\n1. Git<br />\n2. Nginx</p>\n</li>\n<li>\n<p>Git的安装和配置</p>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#首先需要安装包的依赖</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">yum install  gcc perl-ExtUtils-MakeMaker</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#进入指定目录（这里选择 `usr/local/src`）选择最新版本 [Git](https://mirrors.edge.kernel.org/pub/software/scm/git/) （这里使用 `2.37.3`）下载并解压</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">cd /usr/local/src</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.37.3.tar.gz</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">tar -zxvf git-2.37.3.tar.gz</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#解压出来的 Git 文件都是源文件，我们需要进行编译，进入 Git 解压目录，进行编译和安装, 安装位置（这里选择 `usr/local/git`）, 整个过程可能需要一定等待。</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">cd git-2.37.3</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">make prefix=/usr/local/git all</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">make prefix=/usr/local/git install</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#安装好后，我们需要配置环境变量，打开环境变量配置文件：</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">vim /etc/profile</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#在文件底部添加 Git 安装目录信息。</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">PATH=$PATH:/usr/local/git/bin</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">export PATH</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#刷新环境变量，使之生效</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">source /etc/profile</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#此时 Git 应该已经安装完成，可以查看 Git 版本号是否和你指定的版本一样：</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">git --version</span></span></code></pre>\n<ul>\n<li>Git 新用户与配置</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#创建 git 用户和密码</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">adduser git</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">passwd git</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#将 git 用户添加到 sudoers 文件中</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">chmod 740 /etc/sudoers</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">vim /etc/sudoers</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#在Allow root to run any commands anywhere下面添加 git 用户内容, 保存并退出</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">git      ALL=(ALL)       ALL</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#修改回 sudoers 文件权限</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">chmod 400 /etc/sudoers</span></span></code></pre>\n<ul>\n<li>测试<br />\n通过Git Bash Here将上面本地生成的 id_rsa.pub 公钥内容拷贝到远端服务器, 这个命令会默认在远端服务器 git 用户主目录下生成 <code>authorized_keys</code> 文件 （~/.ssh/authorized_keys）, 其中 <code>server_ip</code> 为公网 IP，不是内部 IP，别拷贝错了</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">ssh-copy-id -i ~/.ssh/id_rsa.pub git@server_ip</span></span></code></pre>\n<p>此时可以通过 ssh 命令(加上 <code>-v</code> 命令，可以输出详细 log)测试连接</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">ssh -v git@server_ip</span></span></code></pre>\n<h4 id=\"博客网站目录配置\"><a class=\"anchor\" href=\"#博客网站目录配置\">#</a> 博客网站目录配置</h4>\n<ul>\n<li>创建博客网站目录位置</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#为博客网站创建根目录（这里选择 `/home/hexo`）</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">mkdir /home/hexo</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#赋予 git 用户权限</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">chown git:git -R /home/hexo</span></span></code></pre>\n<ul>\n<li>自动化配置</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#指定目录位置（这里选择 git 用户主目录 `/home/git`）创建一个名为 `blog.git` 的 `bare repo`</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">cd /home/git </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">git init --bare blog.git</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#同样赋予 git 用户相应权限</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">chown git:git -R blog.git</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#使用自动化配置，自然是要用到 Git 的钩子函数，这里我们需要 `post-receive`，在博客 hooks 目录下新建该文件：</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">vim blog.git/hooks/post-receive</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#然后添加如下内容(注意目录匹配)，保存并退出：</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#!/bin/sh</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#最后，赋予这个文件可执行权限</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">chmod +x /home/git/blog.git/hooks/post-receive</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">#接下来，创建个链接，以防后续 deploy 过程出错</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</span></span></code></pre>\n<h4 id=\"nginx-安装和配置\"><a class=\"anchor\" href=\"#nginx-安装和配置\">#</a> Nginx 安装和配置</h4>\n<ul>\n<li>安装</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">yum install -y nginx</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">systemctl start nginx.service</span></span></code></pre>\n<p>这时，在浏览器中输入公网 IP 地址，应该可以看到 Nginx 默认的欢迎界面</p>\n<ul>\n<li>\n<p>配置</p>\n<p>这里配置 Nginx，将所有 Http 请求都重定向为 Https 请求，这就需要我们有 SSL 证书。<br />\n通过 <code>scp</code> 命令将 SSL 证书拷贝到远端服务器, 正常应该将 Nginx 的证书存放在 <code>/etc/nginx/cert</code> 目录下，这里选择存放在 <code>/home/ssl_cert</code> 下（如果目录不存在，请自行创建）</p>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">scp ~/路径/证书.key root@server_ip:/home/ssl_cert</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">scp ~/路径/证书.pem root@server_ip:/home/ssl_cert</span></span></code></pre>\n<p>然后打开 Nginx 的配置文件进行整体配置</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">server{</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  listen 80;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  server_name dayarch.top; # 个人域名</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  rewrite ^(.*)$ https://$server_name$1 permanent; # 重定向</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">server {</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  listen 443; </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  server_name dayarch.top;  # 个人域名</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl on; </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl_certificate      /路径/证书.pem; # .pem 证书</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl_certificate_key  /路径/证书.key; # .key 证书</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl_session_cache    shared:SSL:1m;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl_session_timeout  5m;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  ssl_prefer_server_ciphers  on;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">  location / {</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    root   /home/hexo;  # 博客网站主目录</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    index index.php  index.html index.htm; </span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    error_page  404              /404.html;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    location = /404.html {</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">        root   /usr/share/nginx/html;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    error_page   500 502 503 504  /50x.html;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    location = /50x.html {</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">        root   /usr/share/nginx/html;</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">    }</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">}</span></span></code></pre>\n<p>通过 <code>nginx -t</code> 命令进行检查，一切正常会输出如下结果：</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">nginx: configuration file /etc/nginx/nginx.conf test is successful</span></span></code></pre>\n<p>重启 Nginx 服务</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">systemctl restart nginx.service</span></span></code></pre>\n<p>至此，所有的准备工作都做完了，接下来，我们需要做一些博客配置</p>\n<h4 id=\"本地博客配置修改\"><a class=\"anchor\" href=\"#本地博客配置修改\">#</a> 本地博客配置修改</h4>\n<p>我们需要将远端服务器的 Git 仓库信息配置到 Hexo 站点配置文件（<code>_config.yml</code>）中</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">deploy:</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> - type: git</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">   repo: git@server_ip:/home/git/blog.git</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">   branch: master</span></span></code></pre>\n<p>陆续执行 hexo 的命令进行部署</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo clean</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo g</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">hexo d</span></span></code></pre>\n<p>至此，距离成功，我们只差最后一步</p>\n<h4 id=\"域名解析\"><a class=\"anchor\" href=\"#域名解析\">#</a> 域名解析</h4>\n<p>配置好域名解析，将其指向云服务器的公网地址即可。</p>\n",
            "tags": [
                "折腾学习",
                "hexo",
                "Typecho"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/jujia/",
            "url": "https://www.aicsuk.net/liferecord/jujia/",
            "title": "原则居家的第十二天",
            "date_published": "2022-09-12T09:39:56.000Z",
            "content_html": "<p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe \nsrc=\"//player.bilibili.com/player.html?aid=900403092&bvid=BV1BP4y1Z7Z3&cid=830713520&page=1\" scrolling=\"no\" border=\"0\" \nframeborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; \nheight: 100%; left: 0; top: 0;\"> </iframe></div>\n</p>\n<p>9月1日博主刚回到家，成都就开始采取居家不外出的措施。一直到今天，满打满算都有12天了。天天待在家里，待的人都废了。<br />\n原则上居家不外出，这样说的话外出了就是不讲原则吗？<br />\n外面的街上连个人影都没有</p>\n<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/12/631efb6a489ba.jpg\" alt=\"空无一人的大街\" /></p>\n<p>龙泉驿区现在都有好几天没有新增了，希望下一批解封的区县里面就有龙泉驿区。</p>\n",
            "tags": [
                "生活记录",
                "疫情"
            ]
        },
        {
            "id": "https://www.aicsuk.net/liferecord/tui/",
            "url": "https://www.aicsuk.net/liferecord/tui/",
            "title": "五年之期已到",
            "date_published": "2022-09-02T09:21:18.000Z",
            "content_html": "<p><img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/02/6311ca2da6e8f.jpg\" alt=\"退伍证书\" title=\"退伍证书\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/02/6311c99743ca2.jpg\" alt=\"单位纪念\" title=\"单位纪念\" /><br />\n<img loading=\"lazy\" src=\"https://cdn.aicsuk.net/2022/09/02/6311ffbd07429.jpg\" alt=\"1828天\" title=\"1828天\" /><br />\n五年了，终于熬出头了</p>\n",
            "tags": [
                "生活记录",
                "退伍"
            ]
        },
        {
            "id": "https://www.aicsuk.net/toss/server-1/",
            "url": "https://www.aicsuk.net/toss/server-1/",
            "title": "忍不住又在服务器上花钱了",
            "date_published": "2022-07-06T13:50:31.000Z",
            "content_html": "<p>  最近这个月沉迷服务器无法自拔，先买了华为云的云服务器，然后又买了天翼云的云服务器，博客也从之前的腾讯云香港搬到了华为云。<br />\n  本来现在天翼云的服务器还在备案，想着等备案下来之后再把博客搬到天翼云的，结果现在又变卦了，买了台镇江的物理服务器，过几天应该会把博客搬到镇江的服务器上。<br />\n  这个月买服务器都花了接近2000块钱了。<br />\n  这台镇江的独服配置是我有史以来用过的配置最高的服务器，16核处理器、32G内存、512G硬盘、50M宽带，是我以前最开始接触建站时想都不敢想的配置 。</p>\n<pre class=\"shiki shiki-themes vitesse-light vitesse-dark\" style=\"background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee\" tabindex=\"0\"><code class=\"language-html\"><span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">-------------------- A Bench.sh Script By Teddysun -------------------</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Version            : v2022-06-01</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Usage              : wget -qO- bench.sh | bash</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">----------------------------------------------------------------------</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> CPU Model          : Intel(R) Xeon(R) CPU E5-2689 0 @ 2.60GHz</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> CPU Cores          : 32 @ 2300.325 MHz</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> CPU Cache          : 20480 KB</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> AES-NI             : Enabled</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> VM-x/AMD-V         : Enabled</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Total Disk         : 467.5 GB (5.4 GB Used)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Total Mem          : 31.3 GB (1.4 GB Used)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Total Swap         : 976.0 MB (0 Used)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> System uptime      : 0 days, 21 hour 22 min</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Load average       : 0.00, 0.00, 0.00</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> OS                 : Debian GNU/Linux 11</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Arch               : x86_64 (64 Bit)</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Kernel             : 5.10.0-8-amd64</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> TCP CC             :</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Virtualization     : Dedicated</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Organization       : AS56046 China Mobile communications corporation</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Location           : Zhenjiang / CN</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Region             : Jiangsu</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">----------------------------------------------------------------------</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> I/O Speed(1st run) : 843 MB/s</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> I/O Speed(2nd run) : 886 MB/s</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> I/O Speed(3rd run) : 888 MB/s</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> I/O Speed(average) : 872.3 MB/s</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">----------------------------------------------------------------------</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Node Name        Upload Speed      Download Speed      Latency</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Speedtest.net    47.48 Mbps        97.68 Mbps          2.46 ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Los Angeles, US  15.84 Mbps        1.51 Mbps           175.46 ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Montreal, CA     15.57 Mbps        1.13 Mbps           205.37 ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Paris, FR        18.21 Mbps        1.54 Mbps           224.56 ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Amsterdam, NL    11.68 Mbps        1.45 Mbps           226.40 ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Shanghai, CN     44.57 Mbps        98.55 Mbps          11.79 ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Singapore, SG    4.43 Mbps         12.94 Mbps          428.94 ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">----------------------------------------------------------------------</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Finished in        : 7 min 46 sec</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\"> Timestamp          : 2022-07-06 21:40:17 CST</span></span>\n<span class=\"line\"><span style=\"color:#393A34;--shiki-dark:#DBD7CAEE\">----------------------------------------------------------------------</span></span></code></pre>\n<p>  我从最开始建站时用别人的免费主机，再到收费主机，后来到VPS、云服务器，到现在的物理服务器，一步步升级上来都花了8年时间。估计要是以后在升级的话，那就应该是托管服务器了。</p>\n",
            "tags": [
                "折腾学习",
                "服务器"
            ]
        }
    ]
}